{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Tronix I/O. \u00b6 Microchip PIC 8-BIT Trainer Boards. \u00b6 Nano : 44 Pins for PIC16F/PIC18F MCU Familiy. Micro : 64 Pins for PIC16F/PIC18F MCU Familiy. Mini : 28 Pins for PIC16F/PIC18F MCU Familiy. PIC 8-Bit : 28 Pins for PIC16F/PIC18F MCU Familiy. Microchip PIC 16-BIT Trainer Boards. \u00b6 Nano : 44 Pins for PIC24F/dsPIC33 MCU Familiy. Micro : 64 Pins for PIC24F/dsPIC33 MCU Familiy. Mini : 28 Pins for PIC24F/dsPIC33 MCU Familiy. PIC 16-Bit : 28 Pins for PIC24F/dsPIC33 MCU Familiy. Robotics. \u00b6 TBot : 2 Wheels RC Servo Motors. TCar : 4 Wheels DC Motors.","title":"Home"},{"location":"#tronix-io","text":"","title":"Tronix I/O."},{"location":"#microchip-pic-8-bit-trainer-boards","text":"Nano : 44 Pins for PIC16F/PIC18F MCU Familiy. Micro : 64 Pins for PIC16F/PIC18F MCU Familiy. Mini : 28 Pins for PIC16F/PIC18F MCU Familiy. PIC 8-Bit : 28 Pins for PIC16F/PIC18F MCU Familiy.","title":"Microchip PIC 8-BIT Trainer Boards."},{"location":"#microchip-pic-16-bit-trainer-boards","text":"Nano : 44 Pins for PIC24F/dsPIC33 MCU Familiy. Micro : 64 Pins for PIC24F/dsPIC33 MCU Familiy. Mini : 28 Pins for PIC24F/dsPIC33 MCU Familiy. PIC 16-Bit : 28 Pins for PIC24F/dsPIC33 MCU Familiy.","title":"Microchip PIC 16-BIT Trainer Boards."},{"location":"#robotics","text":"TBot : 2 Wheels RC Servo Motors. TCar : 4 Wheels DC Motors.","title":"Robotics."},{"location":"pic-16bit/","text":"Microchip PIC 16-Bit Trainers Boards. \u00b6 NANO Trainer Board. \u00b6 44 Pins PIC24F/dsPIC33 MCU Family. 2x20 Pins Headers for Breadboard and Probes. USB to I2C/UART Protocol Converter. I2C on Board Jumpers. USB Powered, 3V3 on Board Regulator. MICRO Trainer Board. \u00b6 64 Pins PIC24F/dsPIC33 MCU Family. 4x16 Pins Headers for Probes. USB to I2C/UART Protocol Converter. I2C on Board Jumpers. USB or ExternalPowered. MINI Trainer Board. \u00b6 28 Pins PIC24F/dsPIC33 MCU Family. 2x14 Pins Headers for Probes. LCD 2x20 Characters with Dimmable Backlight. 2 Push Buttons. 1 Rotary Encoder with Switch. 2 Analog Potentiometers. USB to I2C/UART Protocol Converter. I2C on Board Jumpers. 170 Tie Point Breadboard. USB or External Powered. PIC 16-Bit Trainer Board. \u00b6 28 Pins PIC24F/dsPIC33 MCU Family. 2x14 Pins Headers for Probes. 4 Push Buttons. 1 Rotary Encoder with Switch. 2 Analog Potentiometers. 10 LED Bargraph. Expansion Board: LCD 4x20 Characters with Backlight. 16 Pins Expansion Board, 98mm x 60mm. EUSART External Module. I2C External Module. SPI External. 170 Tie Point Breadboard. External Powered, on board multi-tour trimmer for xxV to xxV.","title":"Microchip PIC 16-Bit Trainers Boards."},{"location":"pic-16bit/#microchip-pic-16-bit-trainers-boards","text":"","title":"Microchip PIC 16-Bit Trainers Boards."},{"location":"pic-16bit/#nano-trainer-board","text":"44 Pins PIC24F/dsPIC33 MCU Family. 2x20 Pins Headers for Breadboard and Probes. USB to I2C/UART Protocol Converter. I2C on Board Jumpers. USB Powered, 3V3 on Board Regulator.","title":"NANO Trainer Board."},{"location":"pic-16bit/#micro-trainer-board","text":"64 Pins PIC24F/dsPIC33 MCU Family. 4x16 Pins Headers for Probes. USB to I2C/UART Protocol Converter. I2C on Board Jumpers. USB or ExternalPowered.","title":"MICRO Trainer Board."},{"location":"pic-16bit/#mini-trainer-board","text":"28 Pins PIC24F/dsPIC33 MCU Family. 2x14 Pins Headers for Probes. LCD 2x20 Characters with Dimmable Backlight. 2 Push Buttons. 1 Rotary Encoder with Switch. 2 Analog Potentiometers. USB to I2C/UART Protocol Converter. I2C on Board Jumpers. 170 Tie Point Breadboard. USB or External Powered.","title":"MINI Trainer Board."},{"location":"pic-16bit/#pic-16-bit-trainer-board","text":"28 Pins PIC24F/dsPIC33 MCU Family. 2x14 Pins Headers for Probes. 4 Push Buttons. 1 Rotary Encoder with Switch. 2 Analog Potentiometers. 10 LED Bargraph. Expansion Board: LCD 4x20 Characters with Backlight. 16 Pins Expansion Board, 98mm x 60mm. EUSART External Module. I2C External Module. SPI External. 170 Tie Point Breadboard. External Powered, on board multi-tour trimmer for xxV to xxV.","title":"PIC 16-Bit Trainer Board."},{"location":"pic-16bit/micro/","text":"MICRO PIC 16-Bit Trainers Boards. \u00b6 Features. \u00b6 64 Pins PIC24F/dsPIC33 MCU Family. 4x16 Pins Headers for Probes. USB to I2C/UART Protocol Converter. I2C on Board Jumpers. USB or ExternalPowered. Schematic. \u00b6 TODO - Micro Trainer. Micro Trainer Top. \u00b6 Micro Trainer Bottom. \u00b6 Note DRAFT : Prototype OK, last check schematic, PCB & code can be modify. TODO : Work in progress, prototype was not good, hardware, PCB and code can be rework.","title":"MICRO PIC 16-Bit Trainers Boards."},{"location":"pic-16bit/micro/#micro-pic-16-bit-trainers-boards","text":"","title":"MICRO PIC 16-Bit Trainers Boards."},{"location":"pic-16bit/micro/#features","text":"64 Pins PIC24F/dsPIC33 MCU Family. 4x16 Pins Headers for Probes. USB to I2C/UART Protocol Converter. I2C on Board Jumpers. USB or ExternalPowered.","title":"Features."},{"location":"pic-16bit/micro/#schematic","text":"TODO - Micro Trainer.","title":"Schematic."},{"location":"pic-16bit/micro/#micro-trainer-top","text":"","title":"Micro Trainer Top."},{"location":"pic-16bit/micro/#micro-trainer-bottom","text":"Note DRAFT : Prototype OK, last check schematic, PCB & code can be modify. TODO : Work in progress, prototype was not good, hardware, PCB and code can be rework.","title":"Micro Trainer Bottom."},{"location":"pic-16bit/mini/","text":"MINI PIC 16-Bit Trainers Board. \u00b6 Features. \u00b6 28 Pins PIC24F/dsPIC33 MCU Family. 2x14 Pins Headers for Probes. LCD 2x20 Characters with Dimmable Backlight. 2 Push Buttons. 1 Rotary Encoder with Switch. 2 Analog Potentiometers. USB to I2C/UART Protocol Converter. I2C on Board Jumpers. 170 Tie Point Breadboard. USB or External Powered. Schematic. \u00b6 Mini Trainer Board. MINI Trainer Top. \u00b6 MINI Trainer Bottom. \u00b6 Note DRAFT : Prototype OK, last check schematic, PCB & code can be modify. TODO : Work in progress, prototype was not good, hardware, PCB and code can be rework.","title":"Mini"},{"location":"pic-16bit/mini/#mini-pic-16-bit-trainers-board","text":"","title":"MINI PIC 16-Bit Trainers Board."},{"location":"pic-16bit/mini/#features","text":"28 Pins PIC24F/dsPIC33 MCU Family. 2x14 Pins Headers for Probes. LCD 2x20 Characters with Dimmable Backlight. 2 Push Buttons. 1 Rotary Encoder with Switch. 2 Analog Potentiometers. USB to I2C/UART Protocol Converter. I2C on Board Jumpers. 170 Tie Point Breadboard. USB or External Powered.","title":"Features."},{"location":"pic-16bit/mini/#schematic","text":"Mini Trainer Board.","title":"Schematic."},{"location":"pic-16bit/mini/#mini-trainer-top","text":"","title":"MINI Trainer Top."},{"location":"pic-16bit/mini/#mini-trainer-bottom","text":"Note DRAFT : Prototype OK, last check schematic, PCB & code can be modify. TODO : Work in progress, prototype was not good, hardware, PCB and code can be rework.","title":"MINI Trainer Bottom."},{"location":"pic-16bit/nano/","text":"NANO PIC 16-Bit Trainers Board. \u00b6 Features. \u00b6 44 Pins PIC24F/dsPIC33 MCU Family. 2x20 Pins Headers for Breadboard and Probes. USB to I2C/UART Protocol Converter. I2C on Board Jumpers. USB Powered, 3V3 on Board Regulator. Schematic. \u00b6 Nano Trainer board. NANO Trainer Top. \u00b6 NANO Trainer Bottom. \u00b6 Note DRAFT : Prototype OK, last check schematic, PCB & code can be modify. TODO : Work in progress, prototype was not good, hardware, PCB and code can be rework.","title":"Nano"},{"location":"pic-16bit/nano/#nano-pic-16-bit-trainers-board","text":"","title":"NANO PIC 16-Bit Trainers Board."},{"location":"pic-16bit/nano/#features","text":"44 Pins PIC24F/dsPIC33 MCU Family. 2x20 Pins Headers for Breadboard and Probes. USB to I2C/UART Protocol Converter. I2C on Board Jumpers. USB Powered, 3V3 on Board Regulator.","title":"Features."},{"location":"pic-16bit/nano/#schematic","text":"Nano Trainer board.","title":"Schematic."},{"location":"pic-16bit/nano/#nano-trainer-top","text":"","title":"NANO Trainer Top."},{"location":"pic-16bit/nano/#nano-trainer-bottom","text":"Note DRAFT : Prototype OK, last check schematic, PCB & code can be modify. TODO : Work in progress, prototype was not good, hardware, PCB and code can be rework.","title":"NANO Trainer Bottom."},{"location":"pic-16bit/trainer/","text":"TRAINER PIC 16-Bit Trainers Boards. \u00b6 Features. \u00b6 28 Pins PIC24F/dsPIC33 MCU Family. 2x14 Pins Headers for Probes. 4 Push Buttons. 1 Rotary Encoder with Switch. 2 Analog Potentiometers. 10 LED Bargraph. Expansion Board: LCD 4x20 Characters with Backlight. 16 Pins Expansion Board, XXx XXx. EUSART External Module. I2C External Module. SPI External. 170 Tie Point Breadboard. External Powered, on board multi-tour trimmer for xxV to xxV. Schematic. \u00b6 TODO - PIC 16-Bit Trainer. TODO - PIC 16-Bit Trainer Top. \u00b6 TODO - PIC 16-Bit Trainer Bottom. \u00b6 Note DRAFT : Prototype OK, last check schematic, PCB & code can be modify. TODO : Work in progress, prototype was not good, hardware, PCB and code can be rework.","title":"PIC 16-Bit"},{"location":"pic-16bit/trainer/#trainer-pic-16-bit-trainers-boards","text":"","title":"TRAINER PIC 16-Bit Trainers Boards."},{"location":"pic-16bit/trainer/#features","text":"28 Pins PIC24F/dsPIC33 MCU Family. 2x14 Pins Headers for Probes. 4 Push Buttons. 1 Rotary Encoder with Switch. 2 Analog Potentiometers. 10 LED Bargraph. Expansion Board: LCD 4x20 Characters with Backlight. 16 Pins Expansion Board, XXx XXx. EUSART External Module. I2C External Module. SPI External. 170 Tie Point Breadboard. External Powered, on board multi-tour trimmer for xxV to xxV.","title":"Features."},{"location":"pic-16bit/trainer/#schematic","text":"TODO - PIC 16-Bit Trainer.","title":"Schematic."},{"location":"pic-16bit/trainer/#todo-pic-16-bit-trainer-top","text":"","title":"TODO - PIC 16-Bit Trainer Top."},{"location":"pic-16bit/trainer/#todo-pic-16-bit-trainer-bottom","text":"Note DRAFT : Prototype OK, last check schematic, PCB & code can be modify. TODO : Work in progress, prototype was not good, hardware, PCB and code can be rework.","title":"TODO - PIC 16-Bit Trainer Bottom."},{"location":"pic-8bit/","text":"Microchip PIC 8-Bit Trainers Boards. \u00b6 NANO Trainer Board. \u00b6 44 Pins PIC16F/PIC18F MCU Family. 2x20 Pins Headers for Breadboard and Probes. USB to I2C/UART Protocol Converter. I2C on Board Jumpers. USB Powered, 3V3 on Board Regulator. MICRO Trainer Board. \u00b6 64 Pins PIC16F/PIC18F MCU Family. 4x16 Pins Headers for Probes. USB to I2C/UART Protocol Converter. I2C on Board Jumpers. USB or ExternalPowered. MINI Trainer Board. \u00b6 28 Pins PIC16F/PIC18F MCU Family. 2x14 Pins Headers for Probes. LCD 2x20 Characters with Dimmable Backlight. 2 Push Buttons. 1 Rotary Encoder with Switch. 2 Analog Potentiometers. USB to I2C/UART Protocol Converter. I2C on Board Jumpers. 170 Tie Point Breadboard. USB or External Powered. PIC 8-Bit Trainer Board. \u00b6 28 Pins PIC16F/PIC18F MCU Family. 2x14 Pins Headers for Probes. 4 Push Buttons. 1 Rotary Encoder with Switch. 2 Analog Potentiometers. 10 LED Bargraph. Expansion Board: LCD 4x20 Characters with Backlight. 16 Pins Expansion Board, 98mm x 60mm. EUSART External Module. I2C External Module. SPI External. 170 Tie Point Breadboard. External Powered, on board multi-tour trimmer for xxV to xxV.","title":"Microchip PIC 8-Bit Trainers Boards."},{"location":"pic-8bit/#microchip-pic-8-bit-trainers-boards","text":"","title":"Microchip PIC 8-Bit Trainers Boards."},{"location":"pic-8bit/#nano-trainer-board","text":"44 Pins PIC16F/PIC18F MCU Family. 2x20 Pins Headers for Breadboard and Probes. USB to I2C/UART Protocol Converter. I2C on Board Jumpers. USB Powered, 3V3 on Board Regulator.","title":"NANO Trainer Board."},{"location":"pic-8bit/#micro-trainer-board","text":"64 Pins PIC16F/PIC18F MCU Family. 4x16 Pins Headers for Probes. USB to I2C/UART Protocol Converter. I2C on Board Jumpers. USB or ExternalPowered.","title":"MICRO Trainer Board."},{"location":"pic-8bit/#mini-trainer-board","text":"28 Pins PIC16F/PIC18F MCU Family. 2x14 Pins Headers for Probes. LCD 2x20 Characters with Dimmable Backlight. 2 Push Buttons. 1 Rotary Encoder with Switch. 2 Analog Potentiometers. USB to I2C/UART Protocol Converter. I2C on Board Jumpers. 170 Tie Point Breadboard. USB or External Powered.","title":"MINI Trainer Board."},{"location":"pic-8bit/#pic-8-bit-trainer-board","text":"28 Pins PIC16F/PIC18F MCU Family. 2x14 Pins Headers for Probes. 4 Push Buttons. 1 Rotary Encoder with Switch. 2 Analog Potentiometers. 10 LED Bargraph. Expansion Board: LCD 4x20 Characters with Backlight. 16 Pins Expansion Board, 98mm x 60mm. EUSART External Module. I2C External Module. SPI External. 170 Tie Point Breadboard. External Powered, on board multi-tour trimmer for xxV to xxV.","title":"PIC 8-Bit Trainer Board."},{"location":"pic-8bit/micro/","text":"MICRO PIC 8-Bit Trainers Boards. \u00b6 Features. \u00b6 64 Pins PIC16F/PIC18F MCU Family. 4x16 Pins Headers for Probes. USB to I2C/UART Protocol Converter. I2C on Board Jumpers. USB or ExternalPowered. Schematic. \u00b6 TODO - Micro Trainer. TODO - Micro Trainer Top. \u00b6 TODO - Micro Trainer Bottom. \u00b6 Note DRAFT : Prototype OK, last check schematic, PCB & code can be modify. TODO : Work in progress, prototype was not good, hardware, PCB and code can be rework.","title":"MICRO PIC 8-Bit Trainers Boards."},{"location":"pic-8bit/micro/#micro-pic-8-bit-trainers-boards","text":"","title":"MICRO PIC 8-Bit Trainers Boards."},{"location":"pic-8bit/micro/#features","text":"64 Pins PIC16F/PIC18F MCU Family. 4x16 Pins Headers for Probes. USB to I2C/UART Protocol Converter. I2C on Board Jumpers. USB or ExternalPowered.","title":"Features."},{"location":"pic-8bit/micro/#schematic","text":"TODO - Micro Trainer.","title":"Schematic."},{"location":"pic-8bit/micro/#todo-micro-trainer-top","text":"","title":"TODO - Micro Trainer Top."},{"location":"pic-8bit/micro/#todo-micro-trainer-bottom","text":"Note DRAFT : Prototype OK, last check schematic, PCB & code can be modify. TODO : Work in progress, prototype was not good, hardware, PCB and code can be rework.","title":"TODO - Micro Trainer Bottom."},{"location":"pic-8bit/mini/","text":"MINI PIC 8-Bit Trainer Board. \u00b6 Features. \u00b6 28 Pins PIC16F/PIC18F MCU Family. 2x14 Pins Headers for Probes. LCD 2x20 Characters with Dimmable Backlight. 2 Push Buttons. 1 Rotary Encoder with Switch. 2 Analog Potentiometers. USB to I2C/UART Protocol Converter. I2C on Board Jumpers. 170 Tie Point Breadboard. USB or External Powered. Schematic. \u00b6 Mini Trainer. MINI Trainer Top. \u00b6 MINI Trainer Bottom. \u00b6 Note DRAFT : Prototype OK, last check schematic, PCB & code can be modify. TODO : Work in progress, prototype was not good, hardware, PCB and code can be rework.","title":"Mini"},{"location":"pic-8bit/mini/#mini-pic-8-bit-trainer-board","text":"","title":"MINI PIC 8-Bit Trainer Board."},{"location":"pic-8bit/mini/#features","text":"28 Pins PIC16F/PIC18F MCU Family. 2x14 Pins Headers for Probes. LCD 2x20 Characters with Dimmable Backlight. 2 Push Buttons. 1 Rotary Encoder with Switch. 2 Analog Potentiometers. USB to I2C/UART Protocol Converter. I2C on Board Jumpers. 170 Tie Point Breadboard. USB or External Powered.","title":"Features."},{"location":"pic-8bit/mini/#schematic","text":"Mini Trainer.","title":"Schematic."},{"location":"pic-8bit/mini/#mini-trainer-top","text":"","title":"MINI Trainer Top."},{"location":"pic-8bit/mini/#mini-trainer-bottom","text":"Note DRAFT : Prototype OK, last check schematic, PCB & code can be modify. TODO : Work in progress, prototype was not good, hardware, PCB and code can be rework.","title":"MINI Trainer Bottom."},{"location":"pic-8bit/nano/","text":"NANO PIC 8-Bit Trainer Board. \u00b6 Features. \u00b6 44 Pins PIC16F/PIC18F MCU Family. 2x20 Pins Headers for Breadboard and Probes. USB to I2C/UART Protocol Converter. I2C on Board Jumpers. USB Powered, 3V3 on Board Regulator. Schematic. \u00b6 Nano Trainer Board. NANO Trainer Top. \u00b6 NANO Trainer Bottom. \u00b6 Note DRAFT : Prototype OK, last check schematic, PCB & code can be modify. TODO : Work in progress, prototype was not good, hardware, PCB and code can be rework.","title":"Nano"},{"location":"pic-8bit/nano/#nano-pic-8-bit-trainer-board","text":"","title":"NANO PIC 8-Bit Trainer Board."},{"location":"pic-8bit/nano/#features","text":"44 Pins PIC16F/PIC18F MCU Family. 2x20 Pins Headers for Breadboard and Probes. USB to I2C/UART Protocol Converter. I2C on Board Jumpers. USB Powered, 3V3 on Board Regulator.","title":"Features."},{"location":"pic-8bit/nano/#schematic","text":"Nano Trainer Board.","title":"Schematic."},{"location":"pic-8bit/nano/#nano-trainer-top","text":"","title":"NANO Trainer Top."},{"location":"pic-8bit/nano/#nano-trainer-bottom","text":"Note DRAFT : Prototype OK, last check schematic, PCB & code can be modify. TODO : Work in progress, prototype was not good, hardware, PCB and code can be rework.","title":"NANO Trainer Bottom."},{"location":"pic-8bit/trainer/","text":"TRAINER PIC 8-Bit Trainers Boards. \u00b6 Features. \u00b6 28 Pins PIC16F/PIC18F MCU Family. 2x14 Pins Headers for Probes. 4 Push Buttons. 1 Rotary Encoder with Switch. 2 Analog Potentiometers. 10 LED Bargraph. Expansion Board: LCD 4x20 Characters with Backlight. 16 Pins Expansion Board, XXx XXx. EUSART External Module. I2C External Module. SPI External. 170 Tie Point Breadboard. External Powered, on board multi-tour trimmer for xxV to xxV. Schematic. \u00b6 DRAFT - PIC 8-Bit Trainer. DRAFT - PIC 8-Bit Trainer Top. \u00b6 DRAFT - PIC 8-Bit Trainer Bottom. \u00b6 Note DRAFT : Prototype OK, last check schematic, PCB & code can be modify. TODO : Work in progress, prototype was not good, hardware, PCB and code can be rework.","title":"PIC 8-Bit"},{"location":"pic-8bit/trainer/#trainer-pic-8-bit-trainers-boards","text":"","title":"TRAINER PIC 8-Bit Trainers Boards."},{"location":"pic-8bit/trainer/#features","text":"28 Pins PIC16F/PIC18F MCU Family. 2x14 Pins Headers for Probes. 4 Push Buttons. 1 Rotary Encoder with Switch. 2 Analog Potentiometers. 10 LED Bargraph. Expansion Board: LCD 4x20 Characters with Backlight. 16 Pins Expansion Board, XXx XXx. EUSART External Module. I2C External Module. SPI External. 170 Tie Point Breadboard. External Powered, on board multi-tour trimmer for xxV to xxV.","title":"Features."},{"location":"pic-8bit/trainer/#schematic","text":"DRAFT - PIC 8-Bit Trainer.","title":"Schematic."},{"location":"pic-8bit/trainer/#draft-pic-8-bit-trainer-top","text":"","title":"DRAFT - PIC 8-Bit Trainer Top."},{"location":"pic-8bit/trainer/#draft-pic-8-bit-trainer-bottom","text":"Note DRAFT : Prototype OK, last check schematic, PCB & code can be modify. TODO : Work in progress, prototype was not good, hardware, PCB and code can be rework.","title":"DRAFT - PIC 8-Bit Trainer Bottom."},{"location":"robotics/","text":"Robotics. \u00b6 TBOT 2 Wheels. \u00b6 Continuous RC Servos Motors. Power 2xCells 18650 Lithium Ion Rechargeable Batteries, with embedded charger. TCAR 4 Wheels. \u00b6 4 DC Motors. Power 2xCells 18650 Lithium Ion Rechargeable Batteries, with embedded charger.","title":"Robotics."},{"location":"robotics/#robotics","text":"","title":"Robotics."},{"location":"robotics/#tbot-2-wheels","text":"Continuous RC Servos Motors. Power 2xCells 18650 Lithium Ion Rechargeable Batteries, with embedded charger.","title":"TBOT 2 Wheels."},{"location":"robotics/#tcar-4-wheels","text":"4 DC Motors. Power 2xCells 18650 Lithium Ion Rechargeable Batteries, with embedded charger.","title":"TCAR 4 Wheels."},{"location":"robotics/tbot/","text":"ROBOT - TBOT 2 Wheels. \u00b6 TBOT Features. \u00b6 2 Wheels. Continuous RC Servos Motors. Power 2xCells 18650 Lithium Ion Rechargeable Batteries, with embedded charger. PARALLAX Small Robot Chassis. PARALLAX Feedback 360 High Speed Servo. PARALLAX Small Robot Whell and Tire. PARALLAX 1\" Tail Whell Ball. TBOT All Schematics. \u00b6 DRAFT - MCU Board PIC-8BIT. Charger 2x18650. DRAFT - IR Wheel. Sensor GP2Y. DRAFT - Sensor HC-SR04. DRAFT - IR Line Folllow. TBOT Code. \u00b6 PIC16F1778 - MCU & GPIO Configuration. PIC16F1778 - EUSART TX - Display Strings. PIC16F1778 - EUSART TX/RX - Echo RX Character. PIC16F1778 - ADC/TIMER0 - Read, Display & Check Battery Value. PIC16F1778 - PWM 16-Bit - RC Servo Forward & Backward. PIC16F1778 - INT0 - Emergency Switch & LED. PIC16F1778 - IOC - Sharp GP2Y0D21YK. TBOT Firmware. \u00b6 DRAFT - PIC16F1778 - PIC-AS - Firmware SHARP GP2Y0D21YK. DRAFT - TBOT MCU PIC 8Bit Top. \u00b6 DRAFT - TBOT MCU PIC 8Bit Bottom. \u00b6 TBOT Charger Top. \u00b6 TBOT Charger Bottom. \u00b6 DRAFT - TBOT IR Wheel Top. \u00b6 DRAFT - TBOT IR Wheel Bottom. \u00b6 TBOT GP2Y Top. \u00b6 TBOT GP2Y Bottom. \u00b6 DRAFT - TBOT HC-SR04 Top. \u00b6 DRAFT - TBOT HC-SR04 Bottom. \u00b6 DRAFT - TBOT IR Line Follow Top. \u00b6 DRAFT - TBOT IR Line Follow Bottom. \u00b6 Note - DRAFT : Prototype OK, last check schematic, PCB & code can be modify. - TODO : Work in progress, prototype was not good, hardware, PCB and code can be rework. DISCLAIMER THIS CODE IS PROVIDED WITHOUT ANY WARRANTY OR GUARANTEES. USERS MAY USE THIS CODE FOR DEVELOPMENT AND EXAMPLE PURPOSES ONLY. AUTHORS ARE NOT RESPONSIBLE FOR ANY ERRORS, OMISSIONS, OR DAMAGES THAT COULD RESULT FROM USING THIS FIRMWARE IN WHOLE OR IN PART.","title":"TBot 2 Wheels"},{"location":"robotics/tbot/#robot-tbot-2-wheels","text":"","title":"ROBOT - TBOT 2 Wheels."},{"location":"robotics/tbot/#tbot-features","text":"2 Wheels. Continuous RC Servos Motors. Power 2xCells 18650 Lithium Ion Rechargeable Batteries, with embedded charger. PARALLAX Small Robot Chassis. PARALLAX Feedback 360 High Speed Servo. PARALLAX Small Robot Whell and Tire. PARALLAX 1\" Tail Whell Ball.","title":"TBOT Features."},{"location":"robotics/tbot/#tbot-all-schematics","text":"DRAFT - MCU Board PIC-8BIT. Charger 2x18650. DRAFT - IR Wheel. Sensor GP2Y. DRAFT - Sensor HC-SR04. DRAFT - IR Line Folllow.","title":"TBOT All Schematics."},{"location":"robotics/tbot/#tbot-code","text":"PIC16F1778 - MCU & GPIO Configuration. PIC16F1778 - EUSART TX - Display Strings. PIC16F1778 - EUSART TX/RX - Echo RX Character. PIC16F1778 - ADC/TIMER0 - Read, Display & Check Battery Value. PIC16F1778 - PWM 16-Bit - RC Servo Forward & Backward. PIC16F1778 - INT0 - Emergency Switch & LED. PIC16F1778 - IOC - Sharp GP2Y0D21YK.","title":"TBOT Code."},{"location":"robotics/tbot/#tbot-firmware","text":"DRAFT - PIC16F1778 - PIC-AS - Firmware SHARP GP2Y0D21YK.","title":"TBOT Firmware."},{"location":"robotics/tbot/#draft-tbot-mcu-pic-8bit-top","text":"","title":"DRAFT - TBOT MCU PIC 8Bit Top."},{"location":"robotics/tbot/#draft-tbot-mcu-pic-8bit-bottom","text":"","title":"DRAFT - TBOT MCU PIC 8Bit Bottom."},{"location":"robotics/tbot/#tbot-charger-top","text":"","title":"TBOT Charger Top."},{"location":"robotics/tbot/#tbot-charger-bottom","text":"","title":"TBOT Charger Bottom."},{"location":"robotics/tbot/#draft-tbot-ir-wheel-top","text":"","title":"DRAFT - TBOT IR Wheel Top."},{"location":"robotics/tbot/#draft-tbot-ir-wheel-bottom","text":"","title":"DRAFT - TBOT IR Wheel Bottom."},{"location":"robotics/tbot/#tbot-gp2y-top","text":"","title":"TBOT GP2Y Top."},{"location":"robotics/tbot/#tbot-gp2y-bottom","text":"","title":"TBOT GP2Y Bottom."},{"location":"robotics/tbot/#draft-tbot-hc-sr04-top","text":"","title":"DRAFT - TBOT HC-SR04 Top."},{"location":"robotics/tbot/#draft-tbot-hc-sr04-bottom","text":"","title":"DRAFT - TBOT HC-SR04 Bottom."},{"location":"robotics/tbot/#draft-tbot-ir-line-follow-top","text":"","title":"DRAFT - TBOT IR Line Follow Top."},{"location":"robotics/tbot/#draft-tbot-ir-line-follow-bottom","text":"Note - DRAFT : Prototype OK, last check schematic, PCB & code can be modify. - TODO : Work in progress, prototype was not good, hardware, PCB and code can be rework. DISCLAIMER THIS CODE IS PROVIDED WITHOUT ANY WARRANTY OR GUARANTEES. USERS MAY USE THIS CODE FOR DEVELOPMENT AND EXAMPLE PURPOSES ONLY. AUTHORS ARE NOT RESPONSIBLE FOR ANY ERRORS, OMISSIONS, OR DAMAGES THAT COULD RESULT FROM USING THIS FIRMWARE IN WHOLE OR IN PART.","title":"DRAFT - TBOT IR Line Follow Bottom."},{"location":"robotics/tcar/","text":"DRAFT - ROBOT - TCAR 4 Wheels. \u00b6 TCAR Features. \u00b6 4 Wheels. 4 DC Motors. Power 2xCells 18650 Lithium Ion Rechargeable Batteries, with embedded charger. 4WD Motor Smart Car Chassis. TCAR All Schematics. \u00b6 TODO - MCU Board PIC-16BIT. TODO - Motors Board LP298. TCAR Motor Top. \u00b6 TCAR Motor Bottom. \u00b6 Note TODO : Work in progress, prototype was not good, hardware, PCB and code can be rework. DRAFT : Prototype OK, last check schematic, PCB & code can be modify. DISCLAIMER THIS CODE IS PROVIDED WITHOUT ANY WARRANTY OR GUARANTEES. USERS MAY USE THIS CODE FOR DEVELOPMENT AND EXAMPLE PURPOSES ONLY. AUTHORS ARE NOT RESPONSIBLE FOR ANY ERRORS, OMISSIONS, OR DAMAGES THAT COULD RESULT FROM USING THIS FIRMWARE IN WHOLE OR IN PART.","title":"TCar 4 Wheels"},{"location":"robotics/tcar/#draft-robot-tcar-4-wheels","text":"","title":"DRAFT - ROBOT - TCAR 4 Wheels."},{"location":"robotics/tcar/#tcar-features","text":"4 Wheels. 4 DC Motors. Power 2xCells 18650 Lithium Ion Rechargeable Batteries, with embedded charger. 4WD Motor Smart Car Chassis.","title":"TCAR Features."},{"location":"robotics/tcar/#tcar-all-schematics","text":"TODO - MCU Board PIC-16BIT. TODO - Motors Board LP298.","title":"TCAR All Schematics."},{"location":"robotics/tcar/#tcar-motor-top","text":"","title":"TCAR Motor Top."},{"location":"robotics/tcar/#tcar-motor-bottom","text":"Note TODO : Work in progress, prototype was not good, hardware, PCB and code can be rework. DRAFT : Prototype OK, last check schematic, PCB & code can be modify. DISCLAIMER THIS CODE IS PROVIDED WITHOUT ANY WARRANTY OR GUARANTEES. USERS MAY USE THIS CODE FOR DEVELOPMENT AND EXAMPLE PURPOSES ONLY. AUTHORS ARE NOT RESPONSIBLE FOR ANY ERRORS, OMISSIONS, OR DAMAGES THAT COULD RESULT FROM USING THIS FIRMWARE IN WHOLE OR IN PART.","title":"TCAR Motor Bottom."},{"location":"tools/","text":"Tools. \u00b6 Downloads. \u00b6 Download Kicad. Teardrops. KiBuzzard. Download Microchip MPLAB X. Download Microchip Compilers XC8/XC16/XC32. Download Saleae Logic2. Download Lab Nation Smartscope.","title":"Tools."},{"location":"tools/#tools","text":"","title":"Tools."},{"location":"tools/#downloads","text":"Download Kicad. Teardrops. KiBuzzard. Download Microchip MPLAB X. Download Microchip Compilers XC8/XC16/XC32. Download Saleae Logic2. Download Lab Nation Smartscope.","title":"Downloads."},{"location":"tools/markdown/","text":"Markdown Examples \u00b6 Code block with highlighted lines \u00b6 Code block with highlighted lines ``` py hl_lines=\"2 4 5\" def bubble_sort(items): for i in range(len(items)): for j in range(len(items) - 1 - i): if items[j] > items[j + 1]: items[j], items[j + 1] = items[j + 1], items[j] ``` def bubble_sort ( items ): for i in range ( len ( items )): for j in range ( len ( items ) - 1 - i ): if items [ j ] > items [ j + 1 ]: items [ j ], items [ j + 1 ] = items [ j + 1 ], items [ j ] Content Tabs \u00b6 Linux Mac OS Windows apt update && apt upgrade Linux ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. brew update Mac OS ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Windows ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Admonitions \u00b6 Admonition with default title !!! note Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Note Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Admonition with custom title !!! note \"Phasellus posuere in sem ut cursus\" Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Phasellus posuere in sem ut cursus Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Admonition without title !!! note \"\" Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Admonitions Examples \u00b6 Note Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Abstract Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Info Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Tip Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Success Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Question Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Warning Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Failure Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Danger Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Bug Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Example Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Quote Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Task List with Checkbox \u00b6 Task list - [x] Lorem ipsum dolor sit amet, consectetur adipiscing elit - [ ] Vestibulum convallis sit amet nisi a tincidunt - [x] In hac habitasse platea dictumst - [x] In scelerisque nibh non dolor mollis congue sed et metus - [ ] Praesent sed risus massa - [ ] Aenean pretium efficitur erat, donec pharetra, ligula non scelerisque Lorem ipsum dolor sit amet, consectetur adipiscing elit Vestibulum convallis sit amet nisi a tincidunt In hac habitasse platea dictumst In scelerisque nibh non dolor mollis congue sed et metus Praesent sed risus massa Aenean pretium efficitur erat, donec pharetra, ligula non scelerisque","title":"Markdown"},{"location":"tools/markdown/#markdown-examples","text":"","title":"Markdown Examples"},{"location":"tools/markdown/#code-block-with-highlighted-lines","text":"Code block with highlighted lines ``` py hl_lines=\"2 4 5\" def bubble_sort(items): for i in range(len(items)): for j in range(len(items) - 1 - i): if items[j] > items[j + 1]: items[j], items[j + 1] = items[j + 1], items[j] ``` def bubble_sort ( items ): for i in range ( len ( items )): for j in range ( len ( items ) - 1 - i ): if items [ j ] > items [ j + 1 ]: items [ j ], items [ j + 1 ] = items [ j + 1 ], items [ j ]","title":"Code block with highlighted lines"},{"location":"tools/markdown/#content-tabs","text":"Linux Mac OS Windows apt update && apt upgrade Linux ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. brew update Mac OS ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Windows ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa.","title":"Content Tabs"},{"location":"tools/markdown/#admonitions","text":"Admonition with default title !!! note Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Note Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Admonition with custom title !!! note \"Phasellus posuere in sem ut cursus\" Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Phasellus posuere in sem ut cursus Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Admonition without title !!! note \"\" Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa.","title":"Admonitions"},{"location":"tools/markdown/#admonitions-examples","text":"Note Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Abstract Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Info Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Tip Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Success Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Question Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Warning Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Failure Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Danger Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Bug Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Example Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Quote Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa.","title":"Admonitions Examples"},{"location":"tools/markdown/#task-list-with-checkbox","text":"Task list - [x] Lorem ipsum dolor sit amet, consectetur adipiscing elit - [ ] Vestibulum convallis sit amet nisi a tincidunt - [x] In hac habitasse platea dictumst - [x] In scelerisque nibh non dolor mollis congue sed et metus - [ ] Praesent sed risus massa - [ ] Aenean pretium efficitur erat, donec pharetra, ligula non scelerisque Lorem ipsum dolor sit amet, consectetur adipiscing elit Vestibulum convallis sit amet nisi a tincidunt In hac habitasse platea dictumst In scelerisque nibh non dolor mollis congue sed et metus Praesent sed risus massa Aenean pretium efficitur erat, donec pharetra, ligula non scelerisque","title":"Task List with Checkbox"},{"location":"tools/mplabx-customize/","text":"MPLAB X Customize. \u00b6 Customize keyboard short cut & Default behaviours. \u00b6 MPLAB X IDE > Preferences... Keymap. Profile: NetBeans. Search: Build Project Edit > Shortcut : Cmd+B. Search: Make and Program Device Main Project Edit > Shortcut : Cmd+D. Apply. Embedded > Generic Settings. Debug startup: Halt at Main. Default Charset: UTF-8. Apply. Embedded > Build Tools. Remove old version: MPASM, XC16 & XC8. Set \"Default\" lastest version: MPASM, XC16 & XC8. Ok.","title":"MPLABX Customize"},{"location":"tools/mplabx-customize/#mplab-x-customize","text":"","title":"MPLAB X Customize."},{"location":"tools/mplabx-customize/#customize-keyboard-short-cut-default-behaviours","text":"MPLAB X IDE > Preferences... Keymap. Profile: NetBeans. Search: Build Project Edit > Shortcut : Cmd+B. Search: Make and Program Device Main Project Edit > Shortcut : Cmd+D. Apply. Embedded > Generic Settings. Debug startup: Halt at Main. Default Charset: UTF-8. Apply. Embedded > Build Tools. Remove old version: MPASM, XC16 & XC8. Set \"Default\" lastest version: MPASM, XC16 & XC8. Ok.","title":"Customize keyboard short cut &amp; Default behaviours."},{"location":"tools/mplabx-hello/","text":"MPLAB X \"Hello, World !\". \u00b6 1.XC8 - C Language. \u00b6 // Configuration Registers. #pragma config FOSC=INTOSC, WDTE=OFF, PWRTE=OFF, MCLRE=ON, CP=OFF #pragma config CPD=OFF, BOREN=OFF, CLKOUTEN=ON, IESO=OFF, FCMEN=OFF #pragma config WRT=OFF, PLLEN=OFF, STVREN=ON, BORV=LO, LVP=ON #include <xc.h> // PIC12F1822 - Compile with XC8(v2.36). // PIC12F1822 - @8MHz Internal Oscillator. // Clock OUT Enable. // MCU.RA4 -> OSCILLOSCOPE.PROBE.A. // Main. void main ( void ) { // MCU Initialization. // Internal Oscillator Settings. OSCCON = 0b01110000 ; // Ports Settings. // PORT Data Register. PORTA = 0b00000000 ; // TRIS Data Direction. TRISA = 0b00000000 ; // WPU Disable. OPTION_REGbits . nWPUEN = 0b1 ; // LATCH Outputs. LATA = 0b00000000 ; // ALTERNATE Pin Function. APFCON = 0b00000000 ; // ANSEL Analog. ANSELA = 0b00000000 ; // WPU Weak Pull-up. WPUA = 0b00000000 ; while ( 1 ){ } } 2.PIC-AS - Assembly Instructions. \u00b6 ; Configuration Registers. CONFIG FOSC = INTOSC CONFIG WDTE = OFF CONFIG PWRTE = OFF CONFIG MCLRE = ON CONFIG CP = OFF CONFIG CPD = OFF CONFIG BOREN = OFF CONFIG CLKOUTEN = ON CONFIG IESO = OFF CONFIG FCMEN = OFF CONFIG WRT = OFF CONFIG PLLEN = OFF CONFIG STVREN = ON CONFIG BORV = LO CONFIG LVP = ON #include <xc.inc> ; PIC12F1822 - Compile with PIC-AS(v2.36). ; PIC12F1822 - @8MHz Internal Oscillator. ; Clock OUT Enable. ; MCU.RA4 -> OSCILLOSCOPE.PROBE.A. ; Reset Vector. PSECT reset_vec , class = CODE , space = 0 , delta = 2 resetVector: GOTO initialize ; Main. PSECT cinit , class = CODE , space = 0 , delta = 2 initialize: ; MCU Initialization. ; Internal Oscillator Settings. MOVLB 0x01 MOVLW 0 b01110000 MOVWF OSCCON ; Ports Settings. ; PORT Data Register. MOVLB 0x00 MOVLW 0 b00000000 MOVWF PORTA ; TRIS Data Direction. MOVLB 0x01 MOVLW 0 b00000000 MOVWF TRISA ; WPU Disable. BSF nWPUEN ; LATCH Outputs. MOVLB 0x02 MOVLW 0 b00000000 MOVWF LATA ; ALTERNATE Pin Function. MOVLW 0 b00000000 MOVWF APFCON ; ANSEL Analog. MOVLB 0x03 MOVLW 0 b00000000 MOVWF ANSELA ; WPU Weak Pull-up. MOVLB 0x04 MOVLW 0 b00000000 MOVWF WPUA loop: GOTO loop END resetVector For display \"Data & Program Memory Usage\": Project Properties > Loading > Load symbols when programming... For display \"Psect Usage Map\": Project Properties > pic-as Global Options Option categories > (Check) Program section (psect) For display \"Memory Class Usage\": Project Properties > pic-as Global Options Option categories > (Check) Class Configure Program Sectors, read your MCU Datasheet about Memory organisation. Project Properties > pic-as Global Options > pic-as Linker Reset Vector: -presect_vector=0000h Initialization code: -pcinit=0005h","title":"MPLABX Hello, World!"},{"location":"tools/mplabx-hello/#mplab-x-hello-world","text":"","title":"MPLAB X \"Hello, World !\"."},{"location":"tools/mplabx-hello/#1xc8-c-language","text":"// Configuration Registers. #pragma config FOSC=INTOSC, WDTE=OFF, PWRTE=OFF, MCLRE=ON, CP=OFF #pragma config CPD=OFF, BOREN=OFF, CLKOUTEN=ON, IESO=OFF, FCMEN=OFF #pragma config WRT=OFF, PLLEN=OFF, STVREN=ON, BORV=LO, LVP=ON #include <xc.h> // PIC12F1822 - Compile with XC8(v2.36). // PIC12F1822 - @8MHz Internal Oscillator. // Clock OUT Enable. // MCU.RA4 -> OSCILLOSCOPE.PROBE.A. // Main. void main ( void ) { // MCU Initialization. // Internal Oscillator Settings. OSCCON = 0b01110000 ; // Ports Settings. // PORT Data Register. PORTA = 0b00000000 ; // TRIS Data Direction. TRISA = 0b00000000 ; // WPU Disable. OPTION_REGbits . nWPUEN = 0b1 ; // LATCH Outputs. LATA = 0b00000000 ; // ALTERNATE Pin Function. APFCON = 0b00000000 ; // ANSEL Analog. ANSELA = 0b00000000 ; // WPU Weak Pull-up. WPUA = 0b00000000 ; while ( 1 ){ } }","title":"1.XC8 - C Language."},{"location":"tools/mplabx-hello/#2pic-as-assembly-instructions","text":"; Configuration Registers. CONFIG FOSC = INTOSC CONFIG WDTE = OFF CONFIG PWRTE = OFF CONFIG MCLRE = ON CONFIG CP = OFF CONFIG CPD = OFF CONFIG BOREN = OFF CONFIG CLKOUTEN = ON CONFIG IESO = OFF CONFIG FCMEN = OFF CONFIG WRT = OFF CONFIG PLLEN = OFF CONFIG STVREN = ON CONFIG BORV = LO CONFIG LVP = ON #include <xc.inc> ; PIC12F1822 - Compile with PIC-AS(v2.36). ; PIC12F1822 - @8MHz Internal Oscillator. ; Clock OUT Enable. ; MCU.RA4 -> OSCILLOSCOPE.PROBE.A. ; Reset Vector. PSECT reset_vec , class = CODE , space = 0 , delta = 2 resetVector: GOTO initialize ; Main. PSECT cinit , class = CODE , space = 0 , delta = 2 initialize: ; MCU Initialization. ; Internal Oscillator Settings. MOVLB 0x01 MOVLW 0 b01110000 MOVWF OSCCON ; Ports Settings. ; PORT Data Register. MOVLB 0x00 MOVLW 0 b00000000 MOVWF PORTA ; TRIS Data Direction. MOVLB 0x01 MOVLW 0 b00000000 MOVWF TRISA ; WPU Disable. BSF nWPUEN ; LATCH Outputs. MOVLB 0x02 MOVLW 0 b00000000 MOVWF LATA ; ALTERNATE Pin Function. MOVLW 0 b00000000 MOVWF APFCON ; ANSEL Analog. MOVLB 0x03 MOVLW 0 b00000000 MOVWF ANSELA ; WPU Weak Pull-up. MOVLB 0x04 MOVLW 0 b00000000 MOVWF WPUA loop: GOTO loop END resetVector For display \"Data & Program Memory Usage\": Project Properties > Loading > Load symbols when programming... For display \"Psect Usage Map\": Project Properties > pic-as Global Options Option categories > (Check) Program section (psect) For display \"Memory Class Usage\": Project Properties > pic-as Global Options Option categories > (Check) Class Configure Program Sectors, read your MCU Datasheet about Memory organisation. Project Properties > pic-as Global Options > pic-as Linker Reset Vector: -presect_vector=0000h Initialization code: -pcinit=0005h","title":"2.PIC-AS - Assembly Instructions."},{"location":"tools/mplabx-programmers/","text":"Microchip Debuggers & Programmers. \u00b6 1.Microchip Snap. \u00b6 Microchip Snap - [EN]. Shop Mouser. Shop Farnell element14 - [FR]. Shop RS Components - [FR]. 2.Microchip PICkit 4. \u00b6 Microchip PICkit 4 - [EN]. Shop Mouser. Shop Farnell element14 - [FR]. Shop RS Components - [FR]. 3.Configure Snap or PICkit 4. \u00b6 Launch MPLAB-IPE (Integrated Programming Environment). Connect Snap or PICkit 4 to USB. Connect Snap or PICKit 4 to target MCU. Select MCU Family, Select Device > Apply. Select Tool > Connect. If target board not powered go to : Only PICkit 4, Snap can't power target MCU. Settings > Advanced Mode > Power > Voltage Options > Power Target Circuit from PIC... Be sure Voltages are good for the target MCU.","title":"MPLABX Debuggers & Programmers"},{"location":"tools/mplabx-programmers/#microchip-debuggers-programmers","text":"","title":"Microchip Debuggers &amp; Programmers."},{"location":"tools/mplabx-programmers/#1microchip-snap","text":"Microchip Snap - [EN]. Shop Mouser. Shop Farnell element14 - [FR]. Shop RS Components - [FR].","title":"1.Microchip Snap."},{"location":"tools/mplabx-programmers/#2microchip-pickit-4","text":"Microchip PICkit 4 - [EN]. Shop Mouser. Shop Farnell element14 - [FR]. Shop RS Components - [FR].","title":"2.Microchip PICkit 4."},{"location":"tools/mplabx-programmers/#3configure-snap-or-pickit-4","text":"Launch MPLAB-IPE (Integrated Programming Environment). Connect Snap or PICkit 4 to USB. Connect Snap or PICKit 4 to target MCU. Select MCU Family, Select Device > Apply. Select Tool > Connect. If target board not powered go to : Only PICkit 4, Snap can't power target MCU. Settings > Advanced Mode > Power > Voltage Options > Power Target Circuit from PIC... Be sure Voltages are good for the target MCU.","title":"3.Configure Snap or PICkit 4."},{"location":"tools/mplabx-project/","text":"MPLAB X Create Project. \u00b6 Create New Project. \u00b6 File > New Project... Choose Project > Microchip Embedded > Standalone Project > Next. Select Device Select Tool > Next. Select Header > Next. Select Compiler > XC8 > Next. Select Project Name and Folder > Finish. File > New File... Choose File Type > C > C Source File > Next. Name and Location > File Name: main > Finish.","title":"MPLABX Create Project"},{"location":"tools/mplabx-project/#mplab-x-create-project","text":"","title":"MPLAB X Create Project."},{"location":"tools/mplabx-project/#create-new-project","text":"File > New Project... Choose Project > Microchip Embedded > Standalone Project > Next. Select Device Select Tool > Next. Select Header > Next. Select Compiler > XC8 > Next. Select Project Name and Folder > Finish. File > New File... Choose File Type > C > C Source File > Next. Name and Location > File Name: main > Finish.","title":"Create New Project."},{"location":"tools/mplabx-simulator/","text":"MPLAB X Simulator. \u00b6 Simulator. \u00b6 Project Propertises > Categories > Conf:[default] > Connected Hardware Tool: Simulator. Debug > Debug Main Project. Window > Debugging > Output > Disassembly Listing File. Window > Target Memory Views > File Registers, Format: Symbol.","title":"MPLABX Simulator"},{"location":"tools/mplabx-simulator/#mplab-x-simulator","text":"","title":"MPLAB X Simulator."},{"location":"tools/mplabx-simulator/#simulator","text":"Project Propertises > Categories > Conf:[default] > Connected Hardware Tool: Simulator. Debug > Debug Main Project. Window > Debugging > Output > Disassembly Listing File. Window > Target Memory Views > File Registers, Format: Symbol.","title":"Simulator."}]}